<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thirdgroup.cdms.mapper.DeliveryOrderMapper">
    <!-- 1. 基础结果集：明确order_id为VARCHAR，与实体类String orderId匹配 -->
    <resultMap id="BaseResultMap" type="com.thirdgroup.cdms.model.DeliveryOrder">
        <id column="order_id" property="orderId" jdbcType="VARCHAR" /> <!-- 核心：VARCHAR类型 -->
        <result column="sender_name" property="senderName" jdbcType="VARCHAR" />
        <result column="sender_phone" property="senderPhone" jdbcType="VARCHAR" />
        <result column="sender_address" property="senderAddress" jdbcType="VARCHAR" />
        <result column="consignee_name" property="consigneeName" jdbcType="VARCHAR" />
        <result column="consignee_phone" property="consigneePhone" jdbcType="VARCHAR" />
        <result column="consignee_address" property="consigneeAddress" jdbcType="VARCHAR" />
        <result column="goods_type" property="goodsType" jdbcType="VARCHAR" />
        <result column="weight" property="weight" jdbcType="DECIMAL" />
        <result column="volume" property="volume" jdbcType="DECIMAL" />
        <result column="delivery_fee" property="deliveryFee" jdbcType="DECIMAL" />
        <result column="platform_income" property="platformIncome" jdbcType="DECIMAL" />
        <result column="deliveryman_income" property="deliverymanIncome" jdbcType="DECIMAL" />
        <result column="expected_mins" property="expectedMins" jdbcType="INTEGER" />
        <result column="remark" property="remark" jdbcType="VARCHAR" />
        <result column="status" property="status" jdbcType="TINYINT" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="creator_id" property="creatorId" jdbcType="BIGINT" />
        <result column="deliveryman_id" property="deliverymanId" jdbcType="BIGINT" />
        <result column="complete_time" property="completeTime" jdbcType="TIMESTAMP" />
        <result column="cancel_time" property="cancelTime" jdbcType="TIMESTAMP" />
    </resultMap>

    <!-- 2. 基础字段列表：复用字段定义 -->
    <sql id="Base_Column_List">
        order_id, sender_name, sender_phone, sender_address, consignee_name, consignee_phone,
        consignee_address, goods_type, weight, volume, delivery_fee, platform_income,
        deliveryman_income, <!-- 必须包含此字段，否则无法返回收益 -->
        expected_mins, remark, status, create_time, creator_id,
        deliveryman_id, complete_time, cancel_time
    </sql>

    <!-- 3. 新增订单：补充order_id类型校验 -->
    <insert id="insert" parameterType="com.thirdgroup.cdms.model.DeliveryOrder">
        INSERT INTO cdms_delivery_order (
        order_id, sender_name, sender_phone, sender_address, consignee_name, consignee_phone,
        consignee_address, goods_type, weight, volume, delivery_fee, platform_income,
        deliveryman_income, expected_mins, remark, status, create_time, creator_id,
        deliveryman_id, complete_time, cancel_time
        ) VALUES (
        #{orderId,jdbcType=VARCHAR},  <!-- 明确VARCHAR，与数据库匹配 -->
        #{senderName,jdbcType=VARCHAR},
        #{senderPhone,jdbcType=VARCHAR},
        #{senderAddress,jdbcType=VARCHAR},
        #{consigneeName,jdbcType=VARCHAR},
        #{consigneePhone,jdbcType=VARCHAR},
        #{consigneeAddress,jdbcType=VARCHAR},
        #{goodsType,jdbcType=VARCHAR},
        #{weight,jdbcType=DECIMAL},
        #{volume,jdbcType=DECIMAL},
        #{deliveryFee,jdbcType=DECIMAL},
        #{platformIncome,jdbcType=DECIMAL},
        #{deliverymanIncome,jdbcType=DECIMAL},
        #{expectedMins,jdbcType=INTEGER},
        #{remark,jdbcType=VARCHAR},
        #{status,jdbcType=TINYINT},
        #{createTime,jdbcType=TIMESTAMP,javaType=java.util.Date},
        #{creatorId,jdbcType=BIGINT},
        #{deliverymanId,jdbcType=BIGINT},
        #{completeTime,jdbcType=TIMESTAMP,javaType=java.util.Date},
        #{cancelTime,jdbcType=TIMESTAMP,javaType=java.util.Date}
        )
    </insert>

    <!-- 4. 删除订单：无需修改（已正确使用VARCHAR） -->
    <delete id="deleteByPrimaryKey">
        DELETE FROM cdms_delivery_order
        WHERE order_id = #{orderId,jdbcType=VARCHAR}
    </delete>

    <!-- 5. 全量更新订单：无需修改（已正确使用VARCHAR） -->
    <update id="updateByPrimaryKey" parameterType="com.thirdgroup.cdms.model.DeliveryOrder">
        UPDATE cdms_delivery_order
        SET
            sender_name = #{senderName,jdbcType=VARCHAR},
            sender_phone = #{senderPhone,jdbcType=VARCHAR},
            sender_address = #{senderAddress,jdbcType=VARCHAR},
            consignee_name = #{consigneeName,jdbcType=VARCHAR},
            consignee_phone = #{consigneePhone,jdbcType=VARCHAR},
            consignee_address = #{consigneeAddress,jdbcType=VARCHAR},
            goods_type = #{goodsType,jdbcType=VARCHAR},
            weight = #{weight,jdbcType=DECIMAL},
            volume = #{volume,jdbcType=DECIMAL},
            delivery_fee = #{deliveryFee,jdbcType=DECIMAL},
            platform_income = #{platformIncome,jdbcType=DECIMAL},
            deliveryman_income = #{deliverymanIncome,jdbcType=DECIMAL},
            expected_mins = #{expectedMins,jdbcType=INTEGER},
            remark = #{remark,jdbcType=VARCHAR},
            status = #{status,jdbcType=TINYINT},
            create_time = #{createTime,jdbcType=TIMESTAMP,javaType=java.util.Date},
            creator_id = #{creatorId,jdbcType=BIGINT},
            deliveryman_id = #{deliverymanId,jdbcType=BIGINT},
            complete_time = #{completeTime,jdbcType=TIMESTAMP,javaType=java.util.Date},
            cancel_time = #{cancelTime,jdbcType=TIMESTAMP,javaType=java.util.Date}
        WHERE order_id = #{orderId,jdbcType=VARCHAR}
    </update>

    <!-- 6. 按主键查询订单：无需修改（已正确使用VARCHAR） -->
    <select id="selectByPrimaryKey" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM cdms_delivery_order
        WHERE order_id = #{orderId,jdbcType=VARCHAR}
    </select>

    <!-- 7. 查询所有订单：无需修改 -->
    <select id="selectAll" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM cdms_delivery_order
        ORDER BY create_time DESC
    </select>

    <!-- 8. 分页查询骑手个人订单：优化模糊查询类型 -->
    <select id="selectPageByDeliveryman" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM cdms_delivery_order
        <where>
            deliveryman_id = #{userId,jdbcType=BIGINT}
            <if test="status != null">AND status = #{status,jdbcType=TINYINT}</if>
            <if test="keyword != null and keyword != ''">
                AND (
                order_id LIKE CONCAT('%', #{keyword,jdbcType=VARCHAR}, '%')  <!-- 补充VARCHAR类型 -->
                OR consignee_name LIKE CONCAT('%', #{keyword,jdbcType=VARCHAR}, '%')
                )
            </if>
        </where>
        ORDER BY create_time DESC
        LIMIT #{start,jdbcType=INTEGER}, #{size,jdbcType=INTEGER}  <!-- 补充分页参数类型 -->
    </select>

    <!-- 9. 统计骑手订单总数：优化模糊查询类型 -->
    <select id="countByDeliveryman" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM cdms_delivery_order
        <where>
            deliveryman_id = #{deliverymanId,jdbcType=BIGINT}
            <if test="status != null">AND status = #{status,jdbcType=TINYINT}</if>
            <if test="keyword != null and keyword != ''">
                AND (
                order_id LIKE CONCAT('%', #{keyword,jdbcType=VARCHAR}, '%')  <!-- 补充VARCHAR类型 -->
                OR consignee_name LIKE CONCAT('%', #{keyword,jdbcType=VARCHAR}, '%')
                )
            </if>
        </where>
    </select>

    <!-- 10. 管理员分页查询订单：优化模糊查询类型 -->
    <select id="selectPageAdmin" resultMap="BaseResultMap">
        SELECT o.*, u.username AS deliveryman_name
        FROM cdms_delivery_order o
        LEFT JOIN cdms_user u ON o.deliveryman_id = u.user_id
        <where>
            <if test="status != null">AND o.status = #{status,jdbcType=TINYINT}</if>
            <if test="deliverymanId != null">AND o.deliveryman_id = #{deliverymanId,jdbcType=BIGINT}</if>
            <if test="keyword != null and keyword != ''">
                AND (
                    o.order_id LIKE CONCAT('%', #{keyword,jdbcType=VARCHAR}, '%')  <!-- 补充VARCHAR类型 -->
                    OR o.sender_name LIKE CONCAT('%', #{keyword,jdbcType=VARCHAR}, '%')
                    OR o.consignee_name LIKE CONCAT('%', #{keyword,jdbcType=VARCHAR}, '%')
                    OR u.username LIKE CONCAT('%', #{keyword,jdbcType=VARCHAR}, '%')
                )
            </if>
            <if test="startTime != null">AND o.create_time &gt;= #{startTime}</if>
            <if test="endTime != null">AND o.create_time &lt; #{endTime}</if>
        </where>
        ORDER BY o.create_time DESC
        LIMIT #{start,jdbcType=INTEGER}, #{size,jdbcType=INTEGER}  <!-- 补充分页参数类型 -->
    </select>

    <!-- 11. 管理员统计订单总数：优化模糊查询类型 -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM cdms_delivery_order o
        LEFT JOIN cdms_user u ON o.deliveryman_id = u.user_id
        <where>
            <if test="status != null">AND o.status = #{status,jdbcType=TINYINT}</if>
            <if test="deliverymanId != null">AND o.deliveryman_id = #{deliverymanId,jdbcType=BIGINT}</if>
            <if test="keyword != null and keyword != ''">
                AND (
                    o.order_id LIKE CONCAT('%', #{keyword,jdbcType=VARCHAR}, '%')  <!-- 补充VARCHAR类型 -->
                    OR o.sender_name LIKE CONCAT('%', #{keyword,jdbcType=VARCHAR}, '%')
                    OR o.consignee_name LIKE CONCAT('%', #{keyword,jdbcType=VARCHAR}, '%')
                    OR u.username LIKE CONCAT('%', #{keyword,jdbcType=VARCHAR}, '%')
                )
            </if>
            <if test="startTime != null">AND o.create_time &gt;= #{startTime}</if>
            <if test="endTime != null">AND o.create_time &lt; #{endTime}</if>
        </where>
    </select>

    <!-- 12. 通用分页查询订单：优化分页参数类型 -->
    <select id="selectPage" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM cdms_delivery_order
        <where>
            <if test="status != null">AND status = #{status,jdbcType=TINYINT}</if>
            <if test="keyword != null and keyword != ''">
                AND (
                order_id LIKE CONCAT('%', #{keyword,jdbcType=VARCHAR}, '%')  <!-- 补充VARCHAR类型 -->
                OR sender_name LIKE CONCAT('%', #{keyword,jdbcType=VARCHAR}, '%')
                OR consignee_name LIKE CONCAT('%', #{keyword,jdbcType=VARCHAR}, '%')
                )
            </if>
        </where>
        ORDER BY create_time DESC
        LIMIT #{start,jdbcType=INTEGER}, #{size,jdbcType=INTEGER}  <!-- 明确INTEGER类型 -->
    </select>

    <!-- 13. 查询骑手在途订单：无需修改 -->
    <select id="selectMyOrders" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM cdms_delivery_order
        WHERE
        deliveryman_id = #{userId,jdbcType=BIGINT}
        AND status IN (1, 2)
        ORDER BY create_time DESC
    </select>

    <!-- 14. 按骑手ID和状态查询订单：无需修改 -->
    <select id="selectByStatusAndDeliveryman" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM cdms_delivery_order
        WHERE
        deliveryman_id = #{deliverymanId,jdbcType=BIGINT}
        AND status = #{status,jdbcType=TINYINT}
        ORDER BY create_time DESC
    </select>

    <!-- 15. 查询待接单订单：无需修改 -->
    <select id="selectPendingOrders" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM cdms_delivery_order
        WHERE
        status = #{status,jdbcType=TINYINT}
        AND deliveryman_id IS NULL
        ORDER BY create_time DESC
    </select>

    <!-- 16. 兼容历史方法：无需修改 -->
    <select id="selectDeliveringByCourierId" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM cdms_delivery_order
        WHERE
        deliveryman_id = #{deliverymanId,jdbcType=BIGINT}
        AND status = #{status,jdbcType=TINYINT}
        ORDER BY create_time DESC
    </select>

    <!-- 17. 历史订单查询：无需修改（已正确适配） -->
    <select id="selectHistoryOrders" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> <!-- 复用字段列表，避免漏查 -->
        FROM cdms_delivery_order
        WHERE
        deliveryman_id = #{userId,jdbcType=BIGINT}
        AND status IN
        <foreach collection="statusCodes" item="code" open="(" separator="," close=")">
            #{code,jdbcType=TINYINT}
        </foreach>
        ORDER BY create_time DESC
    </select>

    <select id="selectActiveOrdersByPage" resultType="com.thirdgroup.cdms.model.DeliveryOrder">
        SELECT <include refid="Base_Column_List"/>
        FROM cdms_delivery_order
        <where>
            status NOT IN (4, 5)
            <if test="keyword != null and keyword != ''">
                AND (
                    order_id LIKE CONCAT('%', #{keyword,jdbcType=VARCHAR}, '%')
                    OR sender_name LIKE CONCAT('%', #{keyword,jdbcType=VARCHAR}, '%')
                    OR consignee_name LIKE CONCAT('%', #{keyword,jdbcType=VARCHAR}, '%')
                    OR sender_phone LIKE CONCAT('%', #{keyword,jdbcType=VARCHAR}, '%')
                    OR consignee_phone LIKE CONCAT('%', #{keyword,jdbcType=VARCHAR}, '%')
                )
            </if>
        </where>
        ORDER BY create_time DESC
        LIMIT #{start,jdbcType=INTEGER}, #{size,jdbcType=INTEGER}
    </select>

    <select id="countActiveOrders" resultType="java.lang.Long" parameterType="java.lang.String">
        SELECT COUNT(*)
        FROM cdms_delivery_order
        <where>
            status NOT IN (4, 5)
            <if test="keyword != null and keyword != ''">
                AND (
                    order_id LIKE CONCAT('%', #{keyword,jdbcType=VARCHAR}, '%')
                    OR sender_name LIKE CONCAT('%', #{keyword,jdbcType=VARCHAR}, '%')
                    OR consignee_name LIKE CONCAT('%', #{keyword,jdbcType=VARCHAR}, '%')
                    OR sender_phone LIKE CONCAT('%', #{keyword,jdbcType=VARCHAR}, '%')
                    OR consignee_phone LIKE CONCAT('%', #{keyword,jdbcType=VARCHAR}, '%')
                )
            </if>
        </where>
    </select>

    <select id="countOrderStatistics" resultType="com.thirdgroup.cdms.model.OrderStatisticsDTO">
        SELECT
            COUNT(*) AS totalCount,
            SUM(platform_income) AS totalAmount,
            SUM(CASE WHEN status = 3 THEN 1 ELSE 0 END) AS completedCount,
            SUM(CASE WHEN status = 4 THEN 1 ELSE 0 END) AS canceledCount,
            SUM(CASE WHEN status = 2 THEN 1 ELSE 0 END) AS deliveringCount,
            AVG(TIMESTAMPDIFF(MINUTE, create_time, complete_time)) AS avgDeliveryTime
        FROM cdms_delivery_order
        <where>
            <if test="startTime != null">AND create_time &gt;= #{startTime}</if>
            <if test="endTime != null">AND create_time &lt; #{endTime}</if>
        </where>
    </select>

    <select id="getOrderTrendByDate" resultType="com.thirdgroup.cdms.model.OrderTrendDTO">
        SELECT
            DATE(create_time) AS date,
            COUNT(*) AS orderCount,
            SUM(platform_income) AS totalIncome,
            AVG(
                CASE
                    WHEN complete_time IS NOT NULL
                    THEN TIMESTAMPDIFF(MINUTE, create_time, complete_time)
                    ELSE NULL
                END
            ) AS avgDeliveryTime
        FROM cdms_delivery_order
        <where>
            status = 3
            <if test="startTime != null">AND create_time &gt;= #{startTime}</if>
            <if test="endTime != null">AND create_time &lt;= #{endTime}</if>
        </where>
        GROUP BY DATE(create_time)
        ORDER BY DATE(create_time)
    </select>

    <!-- 18. 将配送员的所有订单的配送员ID设置为null -->
    <!-- 用于删除配送员账号时处理外键约束 -->
    <update id="updateDeliverymanIdToNull" parameterType="java.lang.Long">
        UPDATE cdms_delivery_order
        SET deliveryman_id = NULL
        WHERE deliveryman_id = #{deliverymanId,jdbcType=BIGINT}
    </update>
</mapper>